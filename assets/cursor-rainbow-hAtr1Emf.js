var N=Object.defineProperty;var O=(n,s,o)=>s in n?N(n,s,{enumerable:!0,configurable:!0,writable:!0,value:o}):n[s]=o;var D=(n,s,o)=>O(n,typeof s!="symbol"?s+"":s,o);import{r as d}from"./index-BfdtaCSe.js";const K=({element:n,length:s=20,colors:o=["#FE0000","#FD8C00","#FFE500","#119F0B","#0644B3","#C22EDC"],size:H=3,trailSpeed:y=.4,colorCycleSpeed:L=.002,blur:E=0,pulseSpeed:$=.01,pulseMin:m=.8,pulseMax:B=1.2})=>{const l=d.useRef(null),C=d.useRef(null),u=d.useRef({x:0,y:0}),R=d.useRef([]),F=d.useRef(),k=d.useRef(!1),I=d.useRef(0);class T{constructor(i,a){D(this,"position");this.position={x:i,y:a}}}const X=(r,i,a)=>{const t=parseInt(r.substr(1,2),16),g=parseInt(r.substr(3,2),16),w=parseInt(r.substr(5,2),16),x=parseInt(i.substr(1,2),16),W=parseInt(i.substr(3,2),16),b=parseInt(i.substr(5,2),16),e=Math.round(t+(x-t)*a),c=Math.round(g+(W-g)*a),h=Math.round(w+(b-w)*a);return`rgb(${e}, ${c}, ${h})`},Y=(r,i)=>{const a=Math.sin(i*$),t=m+(a+1)*(B-m)/2;return r*t};return d.useEffect(()=>{const r=n!==void 0,i=r?n:document.body;if(window.matchMedia("(prefers-reduced-motion: reduce)").matches){console.log("Reduced motion is enabled - cursor animation disabled");return}const t=document.createElement("canvas"),g=t.getContext("2d",{alpha:!0});if(t.className="z-50",!g)return;l.current=t,C.current=g,t.style.top="0px",t.style.left="0px",t.style.pointerEvents="none",t.style.position=r?"absolute":"fixed",r?(n==null||n.appendChild(t),t.width=n.clientWidth,t.height=n.clientHeight):(document.body.appendChild(t),t.width=window.innerWidth,t.height=window.innerHeight);const w=e=>{if(r&&n){const c=n.getBoundingClientRect();u.current.x=e.clientX-c.left,u.current.y=e.clientY-c.top}else u.current.x=e.clientX,u.current.y=e.clientY;if(!k.current){k.current=!0;for(let c=0;c<s;c++)R.current.push(new T(u.current.x,u.current.y))}},x=()=>{r&&n?(t.width=n.clientWidth,t.height=n.clientHeight):(t.width=window.innerWidth,t.height=window.innerHeight)},W=()=>{if(!C.current||!l.current)return;const e=C.current,c=l.current;e.clearRect(0,0,c.width,c.height),e.lineJoin="round",E>0&&(e.filter=`blur(${E}px)`);const h=[];let M=u.current.x,z=u.current.y;R.current.forEach((f,p)=>{const v=R.current[p+1]||R.current[0];f.position.x=M,f.position.y=z,h.push({x:M,y:z}),M+=(v.position.x-f.position.x)*y,z+=(v.position.y-f.position.y)*y}),I.current+=L;const q=I.current%1,P=Y(H,I.current);o.forEach((f,p)=>{const v=o[(p+1)%o.length];e.beginPath(),e.strokeStyle=X(f,v,(p+q)/o.length),h.length&&e.moveTo(h[0].x,h[0].y+p*(P-1)),h.forEach((A,J)=>{J!==0&&e.lineTo(A.x,A.y+p*P)}),e.lineWidth=P,e.lineCap="round",e.stroke()})},b=()=>{W(),F.current=requestAnimationFrame(b)};return i.addEventListener("mousemove",w),window.addEventListener("resize",x),b(),()=>{l.current&&l.current.remove(),F.current&&cancelAnimationFrame(F.current),i.removeEventListener("mousemove",w),window.removeEventListener("resize",x)}},[n,s,o,H,y,L,E,$,m,B]),null};export{K as default};
